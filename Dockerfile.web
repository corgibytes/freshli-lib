# https://hub.docker.com/_/microsoft-dotnet-core
FROM mcr.microsoft.com/dotnet/core/sdk:3.1-bionic AS build
RUN dotnet --version
WORKDIR /source

RUN apt-get update && apt-get install -y unzip

COPY docker-entrypoint-web.sh .

RUN echo 'export PATH="$PATH:/root/.dotnet/tools"' > /root/.bashrc && \
    . /root/.bashrc && \
    dotnet tool install --global dotnet-ef

# place XPlot in its own layer
COPY XPlot/. ./XPlot/
WORKDIR /source/XPlot
RUN dotnet tool restore
RUN dotnet paket restore

WORKDIR /source

# copy csproj and restore as distinct layers
COPY Freshli/Freshli.csproj ./Freshli/
COPY Freshli.Web/Freshli.Web.csproj ./Freshli.Web/
RUN dotnet restore ./Freshli.Web/Freshli.Web.csproj

# copy everything else and build app
COPY Freshli/. ./Freshli/
COPY Freshli.Web/. ./Freshli.Web/
RUN dotnet publish -c release -o /app --no-restore ./Freshli.Web/Freshli.Web.csproj

RUN . /root/.bashrc && dotnet ef migrations script --idempotent --project ./Freshli.Web/Freshli.Web.csproj -o ./migrations.sql

# final stage/image
FROM mcr.microsoft.com/dotnet/core/aspnet:3.1 AS runtime
WORKDIR /app

RUN apt-get update && apt-get install -y postgresql-client

COPY --from=build /app ./
COPY --from=build /source/docker-entrypoint-web.sh ./
COPY --from=build /source/migrations.sql ./
ENTRYPOINT ["./docker-entrypoint-web.sh"]
