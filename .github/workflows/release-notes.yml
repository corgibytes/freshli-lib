name: Release Notes

on:
  push:
    branches:
      - 'main'
      - 'release*'

jobs:
  release_notes:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0 # Required for GitVersion
          ref: ${{ github.head_ref }} # Required for Git Auto Commit

      - name: Setup .NET Core (for GitVersion)
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0'

      - name: Setup .NET Core (for GitReleaseManager)
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1'

      - name: Install tools
        run: dotnet tool restore

      - name: Show GitVersion Config
        run: dotnet gitversion /config /showConfig

      - name: Determine Version
        id: gitversion
        run: "echo ::set-output name=majorMinorPatch::$(dotnet gitversion /config | jq '.MajorMinorPatch')"

      # If there are no closed issues generating the Github Release will fail because it raises an exception.
      # Work around this by checking for success or no closed issue errors.
      - name: "Create/Update GitHub Release ${{ steps.gitversion.outputs.majorMinorPatch }}"
        run: |
          dotnet gitreleasemanager create --owner corgibytes --repository freshli-lib --token ${{ secrets.GITHUB_TOKEN }} --milestone v${{ steps.gitversion.outputs.majorMinorPatch }} --logFilePath output.txt || true
          cat output.txt | grep 'No closed issues have been found for milestone\|Drafted release is available at'

      # This will generate the change log for all the GitHub Releases, feature
      # is not included in the GitReleaseManager action yet.
      - name: Generate Change Log
        run: |
          dotnet gitreleasemanager export --token ${{ secrets.GITHUB_TOKEN }} -o 'corgibytes' -r 'freshli-lib' -f 'CHANGELOG.md'
          git add --renormalize CHANGELOG.md
          cat CHANGELOG.md

      - uses: stefanzweifel/git-auto-commit-action@v4.11.0
        name: Commit Change Log and if it Changed
        with:
          commit_message: Committing auto generated change log.
          file_pattern: CHANGELOG.md
          commit_user_name: M. Scott Ford (as bot)
          commit_user_email: scott@corgibytes.com

