name: Release Notes

on:
  push:
    branches:
      - 'main'
      - 'release/**'
  pull_request:
    branches:
      - 'main'
      - 'release/**'

jobs:
  release_notes:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Required for GitVersion
          ref: ${{ github.head_ref }} # Required for Git Auto Commit
        
      # Require .NET 5 for GitVersion and .NET 3 for GitRelesaseManager
      - name: Setup .NET Core 5 (GitVersion)
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Setup .NET Core 3 (GitReleaseManager)
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.0.x
      
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.9
        with:
          versionSpec: '5.6.6'

      - name: Show GitVersion Config
        uses: gittools/actions/gitversion/execute@v0.9.9
        with:
          useConfigFile: true
          additionalArguments: '/showConfig'

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0.9.9
        id: gitversion
        with:
          useConfigFile: true
      
      - uses: gittools/actions/gitreleasemanager/setup@v0.9.9
        name: Install GitReleaseManager
        with:
          versionSpec: '0.11.0'

      - uses: gittools/actions/gitreleasemanager/create@v0.9.9
        name: Create/Update GitHub Release ${{ steps.gitversion.outputs.majorMinorPatch }}
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: 'corgibytes'
          repository: 'freshli'
          milestone: 'v${{ steps.gitversion.outputs.majorMinorPatch }}' 

      # This will generate the change log for all the GitHub Releases, feature
      # is not included in the GitReleaseManager action yet.
      - name: Generate Change Log
        run: |
          dotnet-gitreleasemanager export --token ${{ secrets.GITHUB_TOKEN }} -o 'corgibytes' -r 'freshli' -f 'CHANGELOG.md'
          cat CHANGELOG.md

      - uses: stefanzweifel/git-auto-commit-action@v4
        name: Commit Change Log and if it Changed
        with:
          commit_message: Committing auto generated change log.
          file_pattern: CHANGELOG.md

