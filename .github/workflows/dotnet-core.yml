name: .NET Core

on:
  push:
    branches: [ main, release* ]
  pull_request:
    branches: [ main, release* ]

jobs:
  auto-format:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.101

      - name: Linting Auto-Formatting
        run: |
          dotnet install dotnet-format --version 5.0.*
          dotnet tool format

      - uses: stefanzweifel/git-auto-commit-action@v4
        name: Commit Auto-Format Changes
        with:
          commit_message: Committing auto-formatted code changes.

  build:
    needs: auto-format
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Required for GitVersion

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.101

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.9
        with:
          versionSpec: '5.6.6'

      - name: Show GitVersion Config
        uses: gittools/actions/gitversion/execute@v0.9.9
        with:
          useConfigFile: true
          additionalArguments: '/showConfig'

      - name: Determine Version and Update csproj Files
        uses: gittools/actions/gitversion/execute@v0.9.9
        with:
          useConfigFile: true
          additionalArguments: '/updateprojectfiles'

      - name: Display updated csproj File
        run: cat Corgibytes.Freshli.Lib/Corgibytes.Freshli.Lib.csproj

      - name: Build
        run: dotnet build --configuration Release

      - name: Test, Generate Code Coverage
        if: ${{ !env.ACT }}
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.TEST_REPORTER_ID }}
        with:
          coverageCommand: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=lcov
          coverageLocations: |
            ${{github.workspace}}/Corgibytes.Freshli.Lib.Test/coverage.info:lcov

      - name: Package
        if: github.event_name == 'push'
        run: dotnet pack -c Release

      - name: Publish Alpha Package to Github Packages
        if: github.event_name == 'push'
        run: dotnet nuget push ./Corgibytes.Freshli.Lib/bin/Release/*.nupkg -k ${{ secrets.GITHUB_TOKEN }} --skip-duplicate -n true -s https://nuget.pkg.github.com/corgibytes/index.json
